managed; // implementation in class zbp_rk_i_doc_head unique;
with draft;

define behavior for zrk_i_doc_head alias Head
implementation in class zbp_rk_i_doc_head unique
persistent table zrk_a_doc_head
draft table zrk_d_doc_head
lock master total etag LastChangedAt
authorization master ( instance )
etag master LocalLastChangedAt
{
  create;
  update;
  delete;

  association _Plant { create; with draft; }
  association _Items { create; with draft; }

  field ( numbering : managed, readonly ) DocUuid;
  field ( readonly ) ObjectId;

  action extendDoc result [1] $self;

  determination initializeDoc on modify { create; }
  determination GenerateObjectId on save { create; }
  determination setSendVia on modify { field Supplier ;  create ; }

  mapping for zrk_a_doc_head
  {
    DocUuid = doc_uuid;
    ObjectType = object_type;
    ObjectId = object_id;
    Title = title;
    RespBuyer = resp_buyer;
    Supplier = supplier;
    Avob = avob;
    CurrencyCode = currency_code;
    ValidFrom = valid_from;
    ValidTo = valid_to;
    SendVia = send_via;
    CreatedBy = created_by;
    CreatedAt = created_at;
    LastChangedBy = last_changed_by;
    LastChangedAt = last_changed_at;
    LocalLastChangedAt = local_last_changed_at;

  }
}

define behavior for zrk_i_doc_plant alias Plant
implementation in class zbp_rk_i_doc_plant unique
persistent table zrk_a_doc_plant
draft table zrk_d_doc_plant
lock dependent by _Head
authorization dependent by _Head
{

  update;
  delete;

  association _Head { with draft; }

  field ( numbering : managed, readonly ) PlantUuid;
  field ( readonly : update ) DocUuid;

  mapping for zrk_a_doc_plant
  {

    PlantUuid = plant_uuid;
    DocUuid = doc_uuid;
    PlantId = plant_id;
    TrnsTerm = trns_term;
    TrnsCity = trns_city;

  }

}


define behavior for ZRK_I_DOC_ITEM alias Items
implementation in class zbp_rk_i_doc_item unique
persistent table zrk_a_doc_item
draft table zrk_d_doc_item
lock dependent by _Head
authorization dependent by _Head
{

  update;
  delete;

  association _Conds { create; with draft; }

  association _Head { with draft; }

  field ( numbering : managed, readonly ) ItemUuid;
  field ( readonly : update ) DocUuid;

  mapping for zrk_a_doc_item
  {

    ItemUuid = item_uuid;
    DocUuid = doc_uuid;
    ItemNo = item_no;
    PartNo = part_no;
    CommCode = comm_code;
    Quantity = quantity;
    Unit = unit;
    Price = price;
    Currency = currency;


  }

}

define behavior for zrk_i_item_cond alias Conds
implementation in class zbp_rk_i_item_cond unique
persistent table zrk_a_item_cond
draft table zrk_d_item_cond
lock dependent by _Head
authorization dependent by _Head

{

  field ( numbering : managed, readonly ) CondUuid;
  field ( readonly : update ) ItemUuid, DocUuid;

  update;
  delete;

  // association _Items { with draft ;}
  association _Head { with draft; }



  mapping for zrk_a_item_cond

  {

    CondUuid = cond_uuid;
    ItemUuid = item_uuid;
    DocUuid = doc_uuid;
    CondType = cond_type;
    Price = price;
    Currency = currency;

  }

}